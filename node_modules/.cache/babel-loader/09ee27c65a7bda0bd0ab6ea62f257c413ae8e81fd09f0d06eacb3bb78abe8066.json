{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/GameGameFrontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\n// src/contexts/AuthContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axiosInstance from '../contexts/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUser = async token => {\n      try {\n        const response = await axiosInstance.post('/api/auth/me');\n        setUser(response.data);\n      } catch (error) {\n        console.error('Failed to fetch user:', error);\n      }\n    };\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUser(token);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axiosInstance.post('/api/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      await getCurrentUser(response.data.token);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const getCurrentUser = async token => {\n    try {\n      const response = await axiosInstance.post('/api/auth/me', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n      setUser(response.data);\n    } catch (error) {\n      console.error('Failed to fetch current user:', error);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    window.location.href = '/'; // 로그인 페이지로 리다이렉트\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","fetchUser","token","response","post","data","error","console","localStorage","getItem","login","email","password","setItem","getCurrentUser","headers","log","logout","removeItem","window","location","href","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/GameGameFrontend/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axiosInstance from '../contexts/axiosInstance';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const fetchUser = async (token) => {\n      try {\n        const response = await axiosInstance.post('/api/auth/me');\n        setUser(response.data);\n      } catch (error) {\n        console.error('Failed to fetch user:', error);\n      }\n    };\n\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUser(token);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axiosInstance.post('/api/auth/login', { email, password });\n      localStorage.setItem('token', response.data.token);\n      await getCurrentUser(response.data.token);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n  const getCurrentUser = async (token) => {\n    try {\n      const response = await axiosInstance.post('/api/auth/me', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n      setUser(response.data);\n    } catch (error) {\n      console.error('Failed to fetch current user:', error);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    window.location.href = '/'; // 로그인 페이지로 리다이렉트\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAOC,KAAK,IAAK;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,aAAa,CAACY,IAAI,CAAC,cAAc,CAAC;QACzDJ,OAAO,CAACG,QAAQ,CAACE,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAED,MAAMJ,KAAK,GAAGM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIP,KAAK,EAAE;MACTD,SAAS,CAACC,KAAK,CAAC;IAClB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMX,aAAa,CAACY,IAAI,CAAC,iBAAiB,EAAE;QAAEO,KAAK;QAAEC;MAAS,CAAC,CAAC;MACjFJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEV,QAAQ,CAACE,IAAI,CAACH,KAAK,CAAC;MAClD,MAAMY,cAAc,CAACX,QAAQ,CAACE,IAAI,CAACH,KAAK,CAAC;IAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAGD,MAAMQ,cAAc,GAAG,MAAOZ,KAAK,IAAK;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,aAAa,CAACY,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE;QAC5DW,OAAO,EAAE;UACP,eAAe,EAAE,UAAUb,KAAK;QAClC;MACF,CAAC,CAAC;MACFK,OAAO,CAACS,GAAG,CAACb,QAAQ,CAACE,IAAI,CAAC;MAC1BL,OAAO,CAACG,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChClB,OAAO,CAAC,IAAI,CAAC;IACbmB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;EAC9B,CAAC;EAED,oBACE3B,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,IAAI;MAAEW,KAAK;MAAEO;IAAO,CAAE;IAAApB,QAAA,EAClDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CAvDIF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAyDlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}