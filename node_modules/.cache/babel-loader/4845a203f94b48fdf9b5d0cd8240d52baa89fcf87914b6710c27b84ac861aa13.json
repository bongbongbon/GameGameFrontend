{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/GameGameFrontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport axiosInstance from '../contexts/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 로그인 함수\n  const login = async (email, password) => {\n    try {\n      const response = await axiosInstance.post('/api/v1/auth/login', {\n        email,\n        password\n      });\n      console.log(response.data);\n      const token = response.data.accessToken;\n      localStorage.setItem('token', token);\n      setToken(token);\n      fetchUser();\n    } catch (error) {\n      throw error.message;\n    }\n  };\n\n  // 회원가입 함수\n  const signup = async (email, password, passwordCheck, nickName, phoneNumber, userRole) => {\n    try {\n      const response = await axiosInstance.post('/api/v1/auth/signUp', {\n        email,\n        password,\n        passwordCheck,\n        nickName,\n        phoneNumber,\n        userRole\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // 유저 정보 가져오기 함수\n  const fetchUser = useCallback(async () => {\n    if (token) {\n      try {\n        const response = await axiosInstance.get(`/api/v1/auth`);\n        setUser(response.data.data);\n        console.log(response.data.data);\n      } catch (error) {\n        setError(error.message); // 오류 상태 업데이트\n      } finally {\n        setLoading(false); // 로딩 완료\n      }\n    }\n  }, [token]);\n\n  // 초기화: token이 있을 경우 유저 정보 가져오기\n  useEffect(() => {\n    if (token) {\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token, fetchUser]);\n\n  // 로그아웃 함수\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      signup,\n      logout,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"DgXLDomPUMEZjXjwyHsWw97iftI=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","axiosInstance","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","loading","setLoading","error","setError","login","email","password","response","post","console","log","data","accessToken","setItem","fetchUser","message","signup","passwordCheck","nickName","phoneNumber","userRole","get","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/GameGameFrontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\nimport axiosInstance from '../contexts/axiosInstance';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); \n  const [error, setError] = useState(null); \n\n  // 로그인 함수\n  const login = async (email, password) => {\n    try {\n      const response = await axiosInstance.post('/api/v1/auth/login', { email, password });\n      console.log(response.data)\n      const token = response.data.accessToken;\n      localStorage.setItem('token', token);\n      setToken(token);\n      fetchUser();\n    } catch (error) {\n      throw error.message;\n    }\n  };\n\n  // 회원가입 함수\n  const signup = async (email, password, passwordCheck, nickName, phoneNumber, userRole) => {\n    try {\n      const response = await axiosInstance.post('/api/v1/auth/signUp', {\n        email,\n        password,\n        passwordCheck,\n        nickName,\n        phoneNumber,\n        userRole,\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // 유저 정보 가져오기 함수\n  const fetchUser = useCallback(async () => {\n    if (token) {\n      try {\n        const response = await axiosInstance.get(`/api/v1/auth`);\n        setUser(response.data.data);\n        console.log(response.data.data);\n      } catch (error) {\n        setError(error.message); // 오류 상태 업데이트\n      } finally {\n        setLoading(false); // 로딩 완료\n      }\n    }\n  }, [token]);\n\n  // 초기화: token이 있을 경우 유저 정보 가져오기\n  useEffect(() => {\n    if (token) {\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token, fetchUser]);\n\n  // 로그아웃 함수\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, user, login, signup, logout, loading, error }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}