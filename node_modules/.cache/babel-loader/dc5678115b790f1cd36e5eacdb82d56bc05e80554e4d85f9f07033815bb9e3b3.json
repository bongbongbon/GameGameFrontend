{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/GameGameFrontend/src/pages/team/TeamDetail.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../../components/Navbar';\nimport Header from '../../components/Header';\nimport TeamNavbar from '../../components/TeamNavbar';\nimport '../../css/Team.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = [{\n  title: \"팀 프로젝트 1\",\n  description: \"설명 1\"\n}, {\n  title: \"팀 프로젝트 2\",\n  description: \"설명 2\"\n}, {\n  title: \"팀 프로젝트 3\",\n  description: \"설명 3\"\n}, {\n  title: \"팀 프로젝트 4\",\n  description: \"설명 4\"\n}, {\n  title: \"팀 프로젝트 5\",\n  description: \"설명 5\"\n}, {\n  title: \"팀 프로젝트 6\",\n  description: \"설명 6\"\n}, {\n  title: \"팀 프로젝트 7\",\n  description: \"설명 7\"\n}, {\n  title: \"팀 프로젝트 8\",\n  description: \"설명 8\"\n}, {\n  title: \"팀 프로젝트 9\",\n  description: \"설명 9\"\n}, {\n  title: \"팀 프로젝트 10\",\n  description: \"설명 10\"\n}, {\n  title: \"팀 프로젝트 10\",\n  description: \"설명 11\"\n}, {\n  title: \"팀 프로젝트 10\",\n  description: \"설명 12\"\n}, {\n  title: \"팀 프로젝트 10\",\n  description: \"설명 13\"\n}\n\n// ... (더 많은 항목 추가 가능)\n];\nfunction TeamDetail() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [team, setTeam] = useState(); // 퀴즈 데이터를 저장할 상태\n\n  _s(useEffect(_s(() => {\n    _s();\n    const {\n      id\n    } = useParams(); // URL에서 id를 추출\n\n    // 데이터 가져오기\n    const fetchTeams = async () => {\n      try {\n        const response = await axiosInstance.get('/api/v1/teams', {\n          params: {\n            page: currentPage,\n            // Spring Data JPA는 0부터 시작합니다.\n            size: teamsPerPage\n          }\n        });\n\n        // 서버 응답 로그 출력\n        console.log(response.data.data);\n\n        // 데이터 검증 및 상태 업데이트\n        if (response.data && response.data.data) {\n          setTeams(Array.isArray(response.data.data.content) ? response.data.data.content : []);\n          setTotalPages(response.data.data.page.totalPages || 1);\n        } else {\n          setTeams([]);\n          setTotalPages(1);\n        }\n      } catch (error) {\n        setError(error.message); // 오류 상태 업데이트\n      } finally {\n        setLoading(false); // 로딩 완료\n      }\n    };\n    fetchTeams(); // 데이터 가져오기 호출\n  }, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", true), [currentPage]), \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", true); // currentPage가 변경될 때마다 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"teamNavbar-container\",\n      children: /*#__PURE__*/_jsxDEV(TeamNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s2(TeamDetail, \"saKKBVFMjqQAFA0jJOE0EEQrlQU=\");\n_c = TeamDetail;\nexport default TeamDetail;\nvar _c;\n$RefreshReg$(_c, \"TeamDetail\");","map":{"version":3,"names":["React","useState","Navbar","Header","TeamNavbar","jsxDEV","_jsxDEV","mockData","title","description","TeamDetail","_s2","_s","$RefreshSig$","team","setTeam","useEffect","id","useParams","fetchTeams","response","axiosInstance","get","params","page","currentPage","size","teamsPerPage","console","log","data","setTeams","Array","isArray","content","setTotalPages","totalPages","error","setError","message","setLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/GameGameFrontend/src/pages/team/TeamDetail.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../../components/Navbar';\nimport Header from '../../components/Header';\nimport TeamNavbar from '../../components/TeamNavbar';\nimport '../../css/Team.css'\n\nconst mockData = [\n  { title: \"팀 프로젝트 1\", description: \"설명 1\" },\n  { title: \"팀 프로젝트 2\", description: \"설명 2\" },\n  { title: \"팀 프로젝트 3\", description: \"설명 3\" },\n  { title: \"팀 프로젝트 4\", description: \"설명 4\" },\n  { title: \"팀 프로젝트 5\", description: \"설명 5\" },\n  { title: \"팀 프로젝트 6\", description: \"설명 6\" },\n  { title: \"팀 프로젝트 7\", description: \"설명 7\" },\n  { title: \"팀 프로젝트 8\", description: \"설명 8\" },\n  { title: \"팀 프로젝트 9\", description: \"설명 9\" },\n  { title: \"팀 프로젝트 10\", description: \"설명 10\" },\n  { title: \"팀 프로젝트 10\", description: \"설명 11\" },\n  { title: \"팀 프로젝트 10\", description: \"설명 12\" },\n  { title: \"팀 프로젝트 10\", description: \"설명 13\" },\n\n  // ... (더 많은 항목 추가 가능)\n];\n\nfunction TeamDetail() {\n\n    const [team, setTeam] = useState(); // 퀴즈 데이터를 저장할 상태\n\n    useEffect(() => {\n\n        const { id } = useParams(); // URL에서 id를 추출\n\n        // 데이터 가져오기\n        const fetchTeams = async () => {\n          try {\n    \n            const response = await axiosInstance.get('/api/v1/teams', {\n              params: {\n                page: currentPage, // Spring Data JPA는 0부터 시작합니다.\n                size: teamsPerPage\n              }\n            });\n    \n            // 서버 응답 로그 출력\n            console.log(response.data.data);\n    \n            // 데이터 검증 및 상태 업데이트\n            if (response.data && response.data.data) {\n              setTeams(Array.isArray(response.data.data.content) ? response.data.data.content : []);\n              setTotalPages(response.data.data.page.totalPages || 1);\n            } else {\n              setTeams([]);\n              setTotalPages(1);\n            }\n          } catch (error) {\n            setError(error.message); // 오류 상태 업데이트\n          } finally {\n            setLoading(false); // 로딩 완료\n          }\n        };\n    \n        fetchTeams(); // 데이터 가져오기 호출\n      }, [currentPage]); // currentPage가 변경될 때마다 실행\n\n\n  return (\n    <div className=\"team-page\">\n      <div className=\"header-container\">\n        <Header />  \n      </div>\n      <div className=\"navbar-container\">\n        <Navbar />\n      </div>\n      <div className='teamNavbar-container'>\n        <TeamNavbar />\n      </div>\n        <div>\n\n        </div>\n\n    </div>\n  );\n}\n\nexport default TeamDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}