{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/gamegamefront/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport Header from '../components/Header';\nimport QuizNavbar from '../components/QuizNavbar';\nimport '../css/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  useEffect(() => {\n    // 데이터 가져오기\n    const fetchQuizzes = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/quizzes'); // API 요청\n        setQuizzes(response.data); // 데이터를 상태에 저장\n      } catch (error) {\n        setError(error.message); // 오류 상태 업데이트\n      } finally {\n        setLoading(false); // 로딩 완료\n      }\n    };\n    fetchQuizzes(); // 데이터 가져오기 호출\n  }, []); // 빈 배열을 의존성 배열로 전달하여 컴포넌트가 처음 렌더링될 때만 실행되도록 함\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizNavbar-container\",\n      children: /*#__PURE__*/_jsxDEV(QuizNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Header","QuizNavbar","jsxDEV","_jsxDEV","Quiz","_s","fetchQuizzes","response","axios","get","setQuizzes","data","error","setError","message","setLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/gamegamefront/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport Header from '../components/Header';\nimport QuizNavbar from '../components/QuizNavbar';\nimport '../css/Quiz.css';\n\nfunction Quiz() {\n\n  useEffect(() => {\n    // 데이터 가져오기\n    const fetchQuizzes = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/quizzes'); // API 요청\n        setQuizzes(response.data); // 데이터를 상태에 저장\n      } catch (error) {\n        setError(error.message); // 오류 상태 업데이트\n      } finally {\n        setLoading(false); // 로딩 완료\n      }\n    };\n\n    fetchQuizzes(); // 데이터 가져오기 호출\n  }, []); // 빈 배열을 의존성 배열로 전달하여 컴포넌트가 처음 렌더링될 때만 실행되도록 함\n\n\n  return (\n    <div className=\"quiz-page\">\n      <div className=\"header-container\">\n        <Header />  \n      </div>\n      <div className=\"navbar-container\">\n        <Navbar />\n      </div>\n      <div className='quizNavbar-container'>\n        <QuizNavbar />\n      </div>\n      <div className=\"quiz-content\">\n            \n      </div>\n    </div>\n  );\n}\n\nexport default Quiz;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEdP,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAC;QACvEC,UAAU,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;MAC3B,CAAC,SAAS;QACRC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDT,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR,oBACEH,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/Bd,OAAA,CAACH,MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/Bd,OAAA,CAACJ,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnCd,OAAA,CAACF,UAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAnCQD,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AAqCb,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}