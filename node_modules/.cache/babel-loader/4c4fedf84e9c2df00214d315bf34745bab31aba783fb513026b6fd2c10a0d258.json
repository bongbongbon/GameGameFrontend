{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/gamegamefront/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// AuthContext 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider 컴포넌트\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    token: localStorage.getItem('token') || null,\n    login: async (email, password) => {\n      try {\n        const response = await axios.post('http://localhost:8080/api/auth/login', {\n          email,\n          password\n        });\n        const {\n          token\n        } = response.data;\n        localStorage.setItem('token', token); // 토큰을 localStorage에 저장\n        setAuthState({\n          token\n        });\n      } catch (error) {\n        throw error; // 로그인 실패 시 오류를 던집니다.\n      }\n    },\n    logout: () => {\n      localStorage.removeItem('token'); // 토큰 제거\n      setAuthState({\n        token: null\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authState,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n// useAuth 훅\n_s(AuthProvider, \"XPSD7XLQYcFhMSFBhbwE/harWPU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authState","setAuthState","token","localStorage","getItem","login","email","password","response","post","data","setItem","error","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/gamegamefront/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// AuthContext 생성\nexport const AuthContext = createContext();\n\n// AuthProvider 컴포넌트\nexport const AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({\n    token: localStorage.getItem('token') || null,\n    login: async (email, password) => {\n      try {\n        const response = await axios.post('http://localhost:8080/api/auth/login', { email, password });\n        const { token } = response.data;\n        localStorage.setItem('token', token); // 토큰을 localStorage에 저장\n        setAuthState({ token });\n      } catch (error) {\n        throw error; // 로그인 실패 시 오류를 던집니다.\n      }\n    },\n    logout: () => {\n      localStorage.removeItem('token'); // 토큰 제거\n      setAuthState({ token: null });\n    }\n  });\n\n  return (\n    <AuthContext.Provider value={authState}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// useAuth 훅\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACzCW,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;IAC5CC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,sCAAsC,EAAE;UAAEH,KAAK;UAAEC;QAAS,CAAC,CAAC;QAC9F,MAAM;UAAEL;QAAM,CAAC,GAAGM,QAAQ,CAACE,IAAI;QAC/BP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC,CAAC,CAAC;QACtCD,YAAY,CAAC;UAAEC;QAAM,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACd,MAAMA,KAAK,CAAC,CAAC;MACf;IACF,CAAC;IACDC,MAAM,EAAEA,CAAA,KAAM;MACZV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;MAClCb,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;IAC/B;EACF,CAAC,CAAC;EAEF,oBACEP,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAEhB,SAAU;IAAAF,QAAA,EACpCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAArB,EAAA,CA1BaF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA2BzB,OAAO,MAAMyB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM/B,UAAU,CAACI,WAAW,CAAC;AAAA;AAAC2B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}