{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/GameGameFrontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axiosInstance from '../contexts/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [user, setUser] = useState(null); // user 상태를 객체로 관리\n\n  // 로그인 함수\n  const login = async (email, password) => {\n    try {\n      const response = await axiosInstance.post('/api/v1/auth/login', {\n        email,\n        password\n      });\n      const token = response.data.data.accessToken;\n      localStorage.setItem('token', token);\n      setToken(token);\n      fetchUser(); // 로그인 후 사용자 정보 가져오기\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // 회원가입 함수\n  const signup = async (email, password, passwordCheck, nickName, phoneNumber, userRole) => {\n    try {\n      const response = await axiosInstance.post('/api/v1/auth/signUp', {\n        email,\n        password,\n        passwordCheck,\n        nickName,\n        phoneNumber,\n        userRole\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // 로그아웃 함수\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Ifil3dn4IVk0wwIrLYjpvfJaHoo=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","login","email","password","response","post","data","accessToken","setItem","fetchUser","error","signup","passwordCheck","nickName","phoneNumber","userRole","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/GameGameFrontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axiosInstance from '../contexts/axiosInstance';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [user, setUser] = useState(null); // user 상태를 객체로 관리\n\n  // 로그인 함수\n  const login = async (email, password) => {\n    try {\n      const response = await axiosInstance.post('/api/v1/auth/login', { email, password });\n      const token = response.data.data.accessToken;\n      localStorage.setItem('token', token);\n      setToken(token);\n      fetchUser(); // 로그인 후 사용자 정보 가져오기\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // 회원가입 함수\n  const signup = async (email, password, passwordCheck, nickName, phoneNumber, userRole) => {\n    try {\n      const response = await axiosInstance.post('/api/v1/auth/signUp', {\n        email,\n        password,\n        passwordCheck,\n        nickName,\n        phoneNumber,\n        userRole,\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n  // 로그아웃 함수\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, user, login, signup, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMe,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,aAAa,CAACiB,IAAI,CAAC,oBAAoB,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MACpF,MAAMR,KAAK,GAAGS,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACC,WAAW;MAC5CV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;MACpCC,QAAQ,CAACD,KAAK,CAAC;MACfc,SAAS,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAG,MAAAA,CAAOT,KAAK,EAAEC,QAAQ,EAAES,aAAa,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,KAAK;IACxF,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMhB,aAAa,CAACiB,IAAI,CAAC,qBAAqB,EAAE;QAC/DH,KAAK;QACLC,QAAQ;QACRS,aAAa;QACbC,QAAQ;QACRC,WAAW;QACXC;MACF,CAAC,CAAC;MACF,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;;EAGD;EACA,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBnB,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;IAChCrB,QAAQ,CAAC,IAAI,CAAC;IACdI,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,KAAK;MAAEI,IAAI;MAAEE,KAAK;MAAEU,MAAM;MAAEK;IAAO,CAAE;IAAAvB,QAAA,EACjEA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CA/CIF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAiDlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}